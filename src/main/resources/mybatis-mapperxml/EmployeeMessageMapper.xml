<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meeting.mapper.EmployeeMessageMapper">
  <resultMap id="BaseResultMap" type="com.meeting.model.EmployeeMessage">
    <constructor>
      <idArg column="employee_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="employee_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="employee_phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="employee_department" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="employee_position" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="employee_rule" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="employee_email" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    employee_id, employee_name, employee_phone, employee_department, employee_position, 
    employee_rule, employee_email
  </sql>
  <select id="selectByExample" parameterType="com.meeting.model.EmployeeMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from employee_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>





  <select id="selectByNameAndDepartment" parameterType="java.lang.String" resultMap="BaseResultMap">

    select * from employee_message
    <where>
      <if test="username!=null and username!=''">
         employee_name = #{username}
      </if>

      <if test="department!=null and department!=''">
        and  employee_department=#{department}
      </if>
    </where>

  </select>





  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee_message
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee_message
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.meeting.model.EmployeeMessageExample">
    delete from employee_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <!--<insert id="insert" parameterType="com.meeting.model.EmployeeMessage">-->
    <!--insert into employee_message (employee_id, employee_name, employee_phone, -->
      <!--employee_department, employee_position, employee_rule, -->
      <!--employee_email)-->
    <!--values (#{employeeId,jdbcType=INTEGER}, #{employeeName,jdbcType=VARCHAR}, #{employeePhone,jdbcType=VARCHAR}, -->
      <!--#{employeeDepartment,jdbcType=VARCHAR}, #{employeePosition,jdbcType=VARCHAR}, #{employeeRule,jdbcType=VARCHAR}, -->
      <!--#{employeeEmail,jdbcType=VARCHAR})-->
  <!--</insert>-->

  <insert id="insert" useGeneratedKeys="true" keyProperty="employeeId" keyColumn="employee_id" parameterType="com.meeting.model.EmployeeMessage">
    insert into employee_message (employee_name, employee_phone,
    employee_department, employee_position, employee_rule,
    employee_email)
    values (#{employeeName,jdbcType=VARCHAR}, #{employeePhone,jdbcType=VARCHAR},
    #{employeeDepartment,jdbcType=VARCHAR}, #{employeePosition,jdbcType=VARCHAR}, #{employeeRule,jdbcType=VARCHAR},
    #{employeeEmail,jdbcType=VARCHAR})
  </insert>


  <insert id="insertSelective" parameterType="com.meeting.model.EmployeeMessage">
    insert into employee_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="employeeName != null">
        employee_name,
      </if>
      <if test="employeePhone != null">
        employee_phone,
      </if>
      <if test="employeeDepartment != null">
        employee_department,
      </if>
      <if test="employeePosition != null">
        employee_position,
      </if>
      <if test="employeeRule != null">
        employee_rule,
      </if>
      <if test="employeeEmail != null">
        employee_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeDepartment != null">
        #{employeeDepartment,jdbcType=VARCHAR},
      </if>
      <if test="employeePosition != null">
        #{employeePosition,jdbcType=VARCHAR},
      </if>
      <if test="employeeRule != null">
        #{employeeRule,jdbcType=VARCHAR},
      </if>
      <if test="employeeEmail != null">
        #{employeeEmail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.meeting.model.EmployeeMessageExample" resultType="java.lang.Integer">
    select count(*) from employee_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee_message
    <set>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeName != null">
        employee_name = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeePhone != null">
        employee_phone = #{record.employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeDepartment != null">
        employee_department = #{record.employeeDepartment,jdbcType=VARCHAR},
      </if>
      <if test="record.employeePosition != null">
        employee_position = #{record.employeePosition,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeRule != null">
        employee_rule = #{record.employeeRule,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeEmail != null">
        employee_email = #{record.employeeEmail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee_message
    set employee_id = #{record.employeeId,jdbcType=INTEGER},
      employee_name = #{record.employeeName,jdbcType=VARCHAR},
      employee_phone = #{record.employeePhone,jdbcType=VARCHAR},
      employee_department = #{record.employeeDepartment,jdbcType=VARCHAR},
      employee_position = #{record.employeePosition,jdbcType=VARCHAR},
      employee_rule = #{record.employeeRule,jdbcType=VARCHAR},
      employee_email = #{record.employeeEmail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.meeting.model.EmployeeMessage">
    update employee_message
    <set>
      <if test="employeeName != null">
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        employee_phone = #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeDepartment != null">
        employee_department = #{employeeDepartment,jdbcType=VARCHAR},
      </if>
      <if test="employeePosition != null">
        employee_position = #{employeePosition,jdbcType=VARCHAR},
      </if>
      <if test="employeeRule != null">
        employee_rule = #{employeeRule,jdbcType=VARCHAR},
      </if>
      <if test="employeeEmail != null">
        employee_email = #{employeeEmail,jdbcType=VARCHAR},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.meeting.model.EmployeeMessage">
    update employee_message
    set employee_name = #{employeeName,jdbcType=VARCHAR},
      employee_phone = #{employeePhone,jdbcType=VARCHAR},
      employee_department = #{employeeDepartment,jdbcType=VARCHAR},
      employee_position = #{employeePosition,jdbcType=VARCHAR},
      employee_rule = #{employeeRule,jdbcType=VARCHAR},
      employee_email = #{employeeEmail,jdbcType=VARCHAR}
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
</mapper>